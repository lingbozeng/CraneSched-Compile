# 使用 Ubuntu 22.04 作为基础镜像
FROM registry.cn-hangzhou.aliyuncs.com/aicpn/linux_arm64_v8_ubuntu:22.04

# 设置时区
ENV TZ=UTC

# 安装基本工具和依赖
RUN apt update && apt upgrade -y && \
    apt install -y \
    wget \
    git \
    curl \
    autoconf \
    automake \
    libtool \
    pkg-config \
    m4 \
    gettext \
    bison \
    flex \
    ca-certificates \
    unzip \
    make \
    build-essential \
    libelf-dev \
    zlib1g-dev \
    ninja-build \
    libcgroup-dev \
    libssl-dev \
    libcurl4-openssl-dev \
    libpam0g-dev \
    libaio-dev \
    libsystemd-dev \
    bcc \
    && apt clean

# 安装 libbpf
RUN wget https://github.com/libbpf/libbpf/archive/refs/tags/v1.4.6.zip && \
    unzip v1.4.6.zip && \
    cd libbpf-1.4.6/src && \
    make && \
    make install && \
    cd / && rm -rf libbpf-1.4.6

# 安装 CMake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.sh && \
    bash cmake-3.26.4-linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm cmake-3.26.4-linux-x86_64.sh

# 安装 GCC 14.2
RUN wget https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz && \
    tar -Jxvf gcc-14.2.0.tar.xz && \
    cd gcc-14.2.0/ && \
    ./contrib/download_prerequisites && \
    mkdir build && \
    cd build && \
    ../configure --prefix=/usr/local/gcc/14.2.0 --enable-languages=c,c++,fortran --disable-multilib && \
    make -j$(nproc) && \
    make install && \
    cd / && rm -rf gcc-14.2.0*

# 使用 wget 下载 Go 安装包并安装
RUN wget https://golang.org/dl/go1.22.2.linux-amd64.tar.gz -P /root && \
    tar -C /usr/local -xzf /root/go1.22.2.linux-amd64.tar.gz && \
    rm -f /root/go1.22.2.linux-amd64.tar.gz

# 设置 Go 环境变量
ENV GOROOT=/usr/local/go
ENV GOPATH=/usr/local/gopath
ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# 设置 Go 环境变量和代理
RUN go env -w GOPROXY=https://goproxy.cn,direct
RUN go env -w GO111MODULE=on

# 安装 protobuf 和 gRPC 插件
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# 验证安装的 Go 版本
RUN go version

# 清理不必要的文件
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 设置 PATH 环境变量以包含安装的 GCC 和 CMake
ENV PATH="/usr/local/gcc/14.2.0/bin:$PATH"
ENV CMAKE_PREFIX_PATH="/usr/local:$CMAKE_PREFIX_PATH"

# 默认进入交互式 bash
CMD ["/bin/bash"]
